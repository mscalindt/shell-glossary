shell-glossary NEWS


2025-10-12 - 2025-10-12
=======================
* Improved the output of opt_err() for valid arguments.


2025-10-06 - 2025-10-06
=======================
* Removed opt_unknown().
  Breaking (backward-incompatible) change.

* Removed opt_unrecognized().
  Breaking (backward-incompatible) change.

* Removed opt_compat_err().
  Breaking (backward-incompatible) change.

* Removed cfg_err().
  Breaking (backward-incompatible) change.


2025-10-01 - 2025-10-02
=======================
* copt() will now accept option arguments only as parameters,
  and will not give/set $opt_match/$opt.
  Breaking (backward-incompatible) change.

* copt_optional() will now accept option arguments only as parameters,
  and will not give/set $opt, $opt_match, and $opt_shift.
  Breaking (backward-incompatible) change.

* scopt() will now accept option arguments only as parameters,
  will not set $opt, and will accept empty option strings.
  Breaking (backward-incompatible) change.

* scopt_optional() will now accept option arguments only as parameters,
  will not set $opt and $opt_shift, and will accept empty option strings.
  Breaking (backward-incompatible) change.

* sopt() will now accept option arguments only as parameters,
  and will not give/set any variables.
  Breaking (backward-incompatible) change.

* ssopt() will now accept option arguments only as parameters,
  will not set $opt, $opt_arg, and $opt_shift, and will accept empty option
  strings.
  Breaking (backward-incompatible) change.

* opt_compat_fail() will now accept option arguments only as parameters.
  Breaking (backward-incompatible) change.

* opt_fail() has been removed.
  Breaking (backward-incompatible) change.

* cfg_fail() will not execute `exit` anymore.
  Breaking (backward-incompatible) change.

* Following the recent change, cfg_fail() has been renamed to cfg_err().
  Breaking (backward-incompatible) change.

* opt_compat_fail() will not execute `exit` anymore.
  Breaking (backward-incompatible) change.

* Following the recent change, opt_compat_fail() has been renamed to
  opt_compat_err().
  Breaking (backward-incompatible) change.


2025-09-29 - 2025-09-29
=======================
* Fixed possible word splitting in map_find_rev().

* Fixed possible word splitting in map_rev().


2025-09-26 - 2025-09-26
=======================
* libfile() will now create the log file, if it does not exist.

* libfile() will now simply not use the log file if it exists but is not
  a regular file, instead of issuing `exit 255`.

* libfile_n() will now create the log file, if it does not exist.

* libfile_n() will now simply not use the log file if it exists but is not
  a regular file, instead of issuing `exit 255`.


2025-09-23 - 2025-09-25
=======================
* Renamed map_pchunk() to pchunk_map().
  Breaking (backward-incompatible) change; existing code requires adjustment.

* Renamed map_pchunk_find() to pchunk_map_find().
  Breaking (backward-incompatible) change; existing code requires adjustment.

* Renamed map_pchunk_find_rev() to pchunk_map_find_rev().
  Breaking (backward-incompatible) change; existing code requires adjustment.

* Renamed map_pchunk_rev() to pchunk_map_rev().
  Breaking (backward-incompatible) change; existing code requires adjustment.

* fed() no longer considers empty format to be an error and will simply return
  success with an empty $_fmt.
  Breaking (backward-incompatible) change.


2025-09-11 - 2025-09-11
=======================
* Added fmode_octal().


2025-08-03 - 2025-08-23
=======================
* Created tag `pre-keycla`.

* Switched from BSD 2-Clause "Simplified" License to KEYCLA 1.0[1][2].
  See HISTORY.md and refer to the commit data for more information.

* ftype() no longer outputs on ENOENT.

[1] https://github.com/mscalindt/keycla-license
[2] https://gitlab.com/mscalindt/keycla-license


2025-08-01 - 2025-08-02
=======================
* Fixed bad map() arg shifting behavior.

* Fixed bad map_find() arg shifting behavior.

* Fixed bad map_try() arg shifting behavior.

* info() now supports format `---`,
  "raw; no <newline>; arg offset".


2025-07-27 - 2025-07-28
=======================
* map() is now a better map function (supports multiple function arguments).
  Breaking (backward-incompatible) change; existing code requires adjustment.

* map_find() is now a better map function (supports multiple function
  arguments).
  Breaking (backward-incompatible) change; existing code requires adjustment.

* Added map_try(),
  "Process each argument with a function irrespective of rc".

* Added map_rev(),
  "Process each argument in reverse with a function".

* Added map_find_rev(),
  "Find success among arguments in reverse using a function".

* Added map_try_rev(),
  "Process each argument in reverse with a function irrespective of rc".

* Added offset(),
  "Offset arguments by N for a function call".


2025-05-23 - 2025-07-04
=======================
* Added libfile_n(),
  "Deterministically modify regular file data in-memory".

* Added libfile(),
  "Modify regular file data in-memory using a deterministic format".

* Added fed(),
  "Create a deterministic file data edit format".

* path_spec_static():
  Fixed bad newline handling of source filenames in resolved
  symbolic links.

* Clarified the code format[1] (<noop> specifically)[2] of fed().

[1] 3cc0b201b9f0
[2] a7db527285b3


2024-07-05 - 2024-07-14
=======================
* Created tag `pre-merge`.

* `main-functions`[1] has been merged into `shell-glossary/main`.
  Refer to HISTORY.md for details.

[1] https://github.com/mscalindt/main-functions


2023-08-04 - 2023-08-15
=======================
* Created tag `pre-split`.

* Major repository reconstruction. Refer to HISTORY.md for details.


2021-08-19
==========
* Initial commit.


========================================================================

Copyright (C) 2021-2025 Dimitar Yurukov <mscalindt@protonmail.com>

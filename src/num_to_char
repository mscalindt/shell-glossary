#! .desc:
# Create N amount of character(s) using PE
#! .params:
# [$1] - N
# ["$2"] - character(s)
#! .uses.fn:
# <assert> ('-whole-n' '$1');
#          Assert a string
#! .gives:
# (0) <_chars> $ - [string]
#! .rc:
# (0) success
# (*) error
#! .rc.fn:
# (assert) (255) bad input
#! .desc.ext:
# If the first character of $1 is `-`, nothing will be processed and
# success will be returned.
#.
num_to_char() {
    set -- "${1%%\-*}" "$2"
    set -- "${1:-0}" "$2"

    assert -whole-n "$1" || return 255

    _chars= && [ "$2" ] || return 0

    _i=0; until [ "$_i" = "$1" ]; do
        _chars="$_chars$2"; _i=$((_i + 1))
    done
}

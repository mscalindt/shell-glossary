#! .desc:
# Parse the content of a file
#! .params:
# <"$1"> - absolute path of a file
# [$2] - options(
#     '1' - add one leading/trailing whitespace character
#     '2' - add two leading/trailing whitespace characters
#     '3' - skip empty lines
#     '4' - strip all leading/trailing whitespace characters
#     .
# )
# ["$3"] - parse_options(
#     "-stopat N" - stop parsing further than "N" line
#     .
# )
#! .rc:
# (0) output | empty output (file) | empty output (by the given ruleset)
# (1) not a file | file does not exist
# (2) file access error
#! .caveats:
# > NULL character.
#   >> Fix: none
# > Reading /proc is unreliable.
#   >> Fix: `cat`
#.
parse() {
    [ -f "$1" ] || return 1
    [ -r "$1" ] || return 2

    case "$3:$2" in
        :1)
            while IFS= read -r _line; do
                printf " %s \n" "$_line"
            done < "$1"
        ;;
        :2)
            while IFS= read -r _line; do
                printf "  %s  \n" "$_line"
            done < "$1"
        ;;
        :3)
            while IFS= read -r _line; do
                [ "$_line" ] && printf "%s\n" "$_line"
            done < "$1"
        ;;
        :4)
            while read -r _line; do
                printf "%s\n" "$_line"
            done < "$1"
        ;;
        :'-stopat'*)
            _maxN="${2#'-stopat '}"; _i=0; while IFS= read -r _line; do
                _i=$((_i + 1))
                case $_i in "$_maxN") break ;; esac
                printf "%s\n" "$_line"
            done < "$1"
        ;;
        '-stopat'*:1)
            _maxN="${3#'-stopat '}"; _i=0; while IFS= read -r _line; do
                _i=$((_i + 1))
                case $_i in "$_maxN") break ;; esac
                printf " %s \n" "$_line"
            done < "$1"
        ;;
        '-stopat'*:2)
            _maxN="${3#'-stopat '}"; _i=0; while IFS= read -r _line; do
                _i=$((_i + 1))
                case $_i in "$_maxN") break ;; esac
                printf "  %s  \n" "$_line"
            done < "$1"
        ;;
        '-stopat'*:3)
            _maxN="${3#'-stopat '}"; _i=0; while IFS= read -r _line; do
                _i=$((_i + 1))
                case $_i in "$_maxN") break ;; esac
                [ "$_line" ] && printf "%s\n" "$_line"
            done < "$1"
        ;;
        '-stopat'*:4)
            _maxN="${3#'-stopat '}"; _i=0; while read -r _line; do
                _i=$((_i + 1))
                case $_i in "$_maxN") break ;; esac
                printf "%s\n" "$_line"
            done < "$1"
        ;;
        *)
            while IFS= read -r _line; do
                printf "%s\n" "$_line"
            done < "$1"
        ;;
    esac

    case "$3:$2" in
        :1|'-stopat'*:1)
            [ "$_line" ] && printf " %s " "$_line"
        ;;
        :2|'-stopat'*:2)
            [ "$_line" ] && printf "  %s  " "$_line"
        ;;
        *)
            printf "%s" "$_line"
        ;;
    esac
}

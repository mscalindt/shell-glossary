#! .desc:
# Match specific option(s) with an optional option argument
#! .params:
# <[$1]> - option
# <[$2]>+ - string
#! .gives.var:
# (0) <opt_arg> - [string];
#                 option argument
# (0) <opt_match> - [string];
#                   option string
#! .rc:
# (0) true
# (1) false
#! .ec:
# (2) bad option argument specification
# (255) input error
#.
scopt_optional() {
    [ "$#" -ge 2 ] || exit 255

    opt_match="$1"

    shift

    while [ "$#" -ge 1 ]; do
        # Assert $opt_match fully matches $1; no option argument.
        case "$opt_match" in
            "$1")
                opt_arg=

                return 0
            ;;
        esac

        # Assert $opt_match matches $1 with an argument.
        case "$opt_match" in
            "$1"'=')
                printf "%s: Invalid argument specification for: '%s'\n" \
                    "${0##*/}" "$opt_match" >&2
                printf "%s: Try '%s --help' for more information.\n" \
                    "${0##*/}" "${0##*/}" >&2

                exit 2
            ;;
            "$1"'='*)
                opt_arg="${opt_match#"$1"=}"

                return 0
            ;;
        esac

        shift
    done

    return 1
}

#! .desc:
# Print formatted text to stderr
#! .params:
# <$1> - color(
#     '-'  - none
#     '-bk' - black
#     '-r' - red
#     '-g' - green
#     '-y' - yellow
#     '-be' - blue
#     '-m' - magenta
#     '-c' - cyan
#     '-w' - white
#     .
# )
# <$2> - format(
#     '-' - raw
#     '--' - raw; no <newline>
#     .
# )
# <"$3">+ - text
#! .uses.var:
# [NO_COLOR] $ - environment variable;
#                disable color
#! .rc:
# (0) success
# (*) error
# (255) bad input
#.
err() {
    _reset='\033[0m'; case $1 in
        '-') _color=; _reset= ;;
        '-bk') _color='\033[1;30m' ;;
        '-r') _color='\033[1;31m' ;;
        '-g') _color='\033[1;32m' ;;
        '-y') _color='\033[1;33m' ;;
        '-be') _color='\033[1;34m' ;;
        '-m') _color='\033[1;35m' ;;
        '-c') _color='\033[1;36m' ;;
        '-w') _color='\033[1;37m' ;;
        *) return 255 ;;
    esac

    _format="$2"

    [ ! "$NO_COLOR" ] || { _color=; _reset=; }

    shift 2; case "$_format" in
        '-') printf "%b%s%b\n" "$_color" "$*" "$_reset" >&2 ;;
        '--') printf "%b%s%b" "$_color" "$*" "$_reset" >&2 ;;
        *) return 255 ;;
    esac
}

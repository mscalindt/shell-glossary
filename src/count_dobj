#! .desc:
# Count all hidden (.*) objects in a directory
#! .params:
# <"$1"> - absolute directory path
# ["$2"] - object suffix
#! .uses:
# <assert> ('-absolute-path' '$1');
#          Assert a string
#! .gives:
# (0) <$_count> - integer
#! .rc:
# (0) success
# (255) bad input/usage
#! .caveats:
# > `ARG_MAX`.
#.
count_dobj() {
    # Assert $1 is an absolute path.
    assert -absolute-path "$1" || return 255

    # Assert $1 is a valid directory.
    [ -d "$1" ] || return 255
    [ -r "$1" ] || return 255

    # Initialize $_count to `0`. Use a glob pattern to match hidden (.*)
    # files and directories in $1 (the directory) with an optional $2/$_sfix
    # (suffix).
    _count=0; _sfix="$2"; set -- "${1%/}"/.*"$2"

    # Assert the glob expanded beyond `.` and/or `..`, otherwise $_count
    # rightfully remains `0`. The argument count ($#) is used to accommodate
    # the unspecified order of glob expansion results.
    if [ "$_sfix" = '.' ] && [ "$#" -ge 2 ]; then
        _count=$(($# - 1))
    elif [ "$_sfix" ] && [ -e "$1" ]; then
        _count=$#
    elif [ "$#" -ge 3 ]; then
        _count=$(($# - 2))
    fi
}

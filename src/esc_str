#! .desc:
# Backslash escape character(s) in a string
#! .params:
# <"$1"> - string
# <"$2"> - character(s)
#! .uses:
# <replchar> ("specific character" "character(s)" '$1');
#            Replace a specific character with character(s) in a string
#! .gives:
# (0) <"$_str"> - string;
#                 [modified <$1>]
#! .rc:
# (0) success
# (*) error
#.
esc_str() {
    # As a matter of courtesy and simple robustness, account for a bad semantic
    # specification of `\` among the characters. The backslash is used to
    # escape other characters, therefore it should be escaped first.
    case "$2" in
        \\*) : ;;
        *\\*) set -- "$1" "\\${2%%\\*}${2#*\\}" ;;
    esac

    # Store the string ($1) into $_str and set $2 as the function's sole
    # positional parameter ($1).
    _str="$1"; set -- "$2"; while [ "$1" ]; do
        # Extract the first character of $1.
        _char="${1%"${1#?}"}"

        # Replace each instance of a character with an escaped one.
        replchar "$_char" "\\$_char" "$_str" || return "$?"

        # Remove the first character from $1.
        set -- "${1#?}"
    done
}

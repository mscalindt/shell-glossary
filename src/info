#! .desc:
# Print formatted text
#! .params:
# <$1> - color(
#     '-'  - none
#     '-black' - bold (`1;`) foreground (`3X`) black (`0`)
#     '-blue' - bold (`1;`) foreground (`3X`) blue (`4`)
#     '-cyan' - bold (`1;`) foreground (`3X`) cyan (`6`)
#     '-green' - bold (`1;`) foreground (`3X`) green (`2`)
#     '-magenta' - bold (`1;`) foreground (`3X`) magenta (`5`)
#     '-red' - bold (`1;`) foreground (`3X`) red (`1`)
#     '-white' - bold (`1;`) foreground (`3X`) white (`7`)
#     '-yellow' - bold (`1;`) foreground (`3X`) yellow (`3`)
#     .
# )
# <$2> - format(
#     '-' - raw
#     '--' - raw; no <newline>
#     '---' - raw; no <newline>; arg offset
#     .
# )
# <"$3">+ - text
#! .uses.var:
# [NO_COLOR] $ - environment variable;
#                disable color
#! .rc:
# (0) success
# (*) error
# (255) bad input / error
#! .desc.ext:
# The colors are bold, foreground text, escape sequences of ANSI.
#
# The usage of color results in undefined behavior. For strict POSIX
# compatibility, specify `-` for $1 or set variable `NO_COLOR`
# to a non-empty value.
#.
info() {
    _reset='\033[0m'; case $1 in
        '-') _color=; _reset= ;;
        '-black') _color='\033[1;30m' ;;
        '-red') _color='\033[1;31m' ;;
        '-green') _color='\033[1;32m' ;;
        '-yellow') _color='\033[1;33m' ;;
        '-blue') _color='\033[1;34m' ;;
        '-magenta') _color='\033[1;35m' ;;
        '-cyan') _color='\033[1;36m' ;;
        '-white') _color='\033[1;37m' ;;
        *) return 255 ;;
    esac

    _format="$2"

    [ ! "$NO_COLOR" ] || { _color=; _reset=; }

    shift 2; case "$_format" in
        '-') printf "%b%s%b\n" "$_color" "$*" "$_reset" ;;
        '--') printf "%b%s%b" "$_color" "$*" "$_reset" ;;
        '---') printf " %b%s%b" "$_color" "$*" "$_reset" ;;
        *) return 255 ;;
    esac
}

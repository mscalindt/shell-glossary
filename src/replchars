#! .desc:
# Replace specific character(s) with character(s) in string
#! .params:
# <$1> - backend(
#     '-shell' - use built-in shell word splitting
#     .
# )
# <"$2"> - specific character(s)
# <"$3"> - character(s)
# <"$4"> - string
#! .gives:
# (0) <"$_str"> - string;
#                 modified $4
#! .rc:
# (0) success
# (255) bad input/usage
#.
replchars() {
    replchar() {
        case "$3" in
            *"$1"*) : ;;
            *) _str="$3"; return 0 ;;
        esac

        # Save IFS
        _old_IFS="$IFS" 2> /dev/null
        ${IFS+':'} unset _old_IFS 2> /dev/null

        IFS="$1"; _chars="$2"

        set -f; set -- $3 "$3"; set +f
        _str=; while [ "$#" -ge 3 ]; do
            _str="$_str$1$_chars"; shift
        done
        case "$IFS" in
            *"${2#"${2%?}"}"*) _str="$_str$1$_chars" ;;
            *) _str="$_str$1" ;;
        esac

        # Restore IFS
        IFS="$_old_IFS" 2> /dev/null
        ${_old_IFS+':'} unset IFS 2> /dev/null
    }

    # Define sensible constraints for usage.
    # `128` denotes the ASCII set.
    [ "${#2}" -le 128 ] || return 255
    [ "${#3}" -le 128 ] || return 255

    replchar "$2" "$3" "$4"
}

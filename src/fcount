#! .desc:
# Count files and directories in a directory
#! .params:
# <"$1"> - absolute path of a directory
# ["$2"] - count_type(
#     "0X" - count files and directories ending with "X"
#     '1' - count only files
#     "1X" - count only files ending with "X"
#     '2' - count only directories
#     "2X" - count only directories ending with "X"
#     .
# )
# [$3] - options(
#     '3' - exclude hidden files/directories
#     .
# )
# [$4] - type(
#     '4' - no output
#     .
# )
#! .gives:
# (0) <$_count> - integer
#! .rc:
# (0) count
# (1) not a directory | directory does not exist
#! .caveats:
# > The number of files/directories the function (i.e. system) can process
#   varies. The files/directories are stored as arguments, which means that the
#   amount of things that can be processed depends on the system and version,
#   on the number of files and their respective argument size, and on the
#   number and size of environment variable names.
#   >> For more information, related limits shall be checked: ARG_MAX
#   >> Fix: none; not applicable
#.
fcount() {
    fcount_all() {
        _fcount=0

        if [ "$_sfix" ]; then
            set -- "$_dir"/*"$_sfix"
            [ -e "$1" ] && _fcount=$#

            set -- "$_dir"/.*"$_sfix"
            case "$_sfix" in
                '.')
                    [ "$#" -ge 2 ] && _fcount=$((_fcount + $# - 1))
                ;;
                *)
                    [ -e "$1" ] && _fcount=$((_fcount + $#))
                ;;
            esac
        else
            set -- "$_dir"/*
            [ -e "$1" ] && _fcount=$#

            set -- "$_dir"/.*
            [ "$#" -ge 3 ] && _fcount=$((_fcount + $# - 2))
        fi
    }
    fcount_dotdirs() {
        _fcount=0

        if [ "$_sfix" ]; then
            set -- "$_dir"/.*"$_sfix"/
            case "$_sfix" in
                '.')
                    [ "$#" -ge 2 ] && _fcount=$(($# - 1))
                ;;
                *)
                    [ -e "$1" ] && _fcount=$#
                ;;
            esac
        else
            set -- "$_dir"/.*/
            [ "$#" -ge 3 ] && _fcount=$(($# - 2))
        fi
    }
    fcount_dotfiles() {
        _fcount=0

        if [ "$_sfix" ]; then
            set -- "$_dir"/.*"$_sfix"
            case "$_sfix" in
                '.')
                    [ "$#" -ge 2 ] && _fcount=$((_fcount + $# - 1))
                ;;
                *)
                    [ -e "$1" ] && _fcount=$((_fcount + $#))
                ;;
            esac

            set -- "$_dir"/.*"$_sfix"/
            case "$_sfix" in
                '.')
                    [ "$#" -ge 2 ] && _fcount=$((_fcount - $# + 1))
                ;;
                *)
                    [ -e "$1" ] && _fcount=$((_fcount - $#))
                ;;
            esac
        else
            set -- "$_dir"/.*
            [ "$#" -ge 3 ] && _fcount=$(($# - 2))

            set -- "$_dir"/.*/
            [ "$#" -ge 3 ] && _fcount=$((_fcount - $# + 2))
        fi
    }
    fcount_dirs() {
        _fcount=0

        if [ "$_sfix" ]; then
            set -- "$_dir"/*"$_sfix"/
        else
            set -- "$_dir"/*/
        fi
        [ -e "$1" ] && _fcount=$#
    }
    fcount_files() {
        _fcount=0

        if [ "$_sfix" ]; then
            set -- "$_dir"/*"$_sfix"
            [ -e "$1" ] && _fcount=$#

            set -- "$_dir"/*"$_sfix"/
            [ -e "$1" ] && _fcount=$((_fcount - $#))
        else
            set -- "$_dir"/*
            [ -e "$1" ] && _fcount=$#

            set -- "$_dir"/*/
            [ -e "$1" ] && _fcount=$((_fcount - $#))
        fi
    }

    [ -d "$1" ] || return 1

    _count=0
    case "$1" in
        *'/') _dir="${1%?}" ;;
        *) _dir="$1" ;;
    esac
    case "$2" in
        0*|1*|2*) _sfix="${2#?}" ;;
        *) _sfix= ;;
    esac

    case $3:"$2" in
        3:2*)
            fcount_dirs; _count=$_fcount
        ;;
        3:1*)
            fcount_files; _count=$_fcount
        ;;
        3:0*|"$3":3)
            fcount_files; _count=$_fcount
            fcount_dirs; _count=$((_count + $_fcount))
        ;;
        "$3":2*)
            fcount_dirs; _count=$_fcount
            fcount_dotdirs; _count=$((_count + $_fcount))
        ;;
        "$3":1*)
            fcount_files; _count=$_fcount
            fcount_dotfiles; _count=$((_count + $_fcount))
        ;;
        *)
            fcount_all; _count=$_fcount
        ;;
    esac

    case $4:$3:"$2" in
        4*|"$4":4*|"$4":"$3":4) : ;;
        *) printf "%d" "$_count" ;;
    esac
}

#! .desc:
# True if simple (no argument) option
#! .params (<1+>):
# ["$1"] - -*
# ["$2"] - --*
#! .uses:
# <opt> $ - string;
#           first positional parameter of the main environment
#! .gives:
# (0) <"$opt_match"> - string;
#                      literal option matched
# (0) <$shiftN> - integer;
#                 shift count
# (0) ["$sopt_index"] - string;
#                       index with encountered short options
#! .rc:
# (0) match
# (1) no match
#.
sopt() {
    # Set the appropriate option argument to match proportional to $opt.
    case "$opt" in
        '--'*)
            # $2 might be the long variant of the option.
            case "$1$2" in
                '--'*) : ;;
                "$1"'--'*) set -- "$2" ;;
                *) return 1 ;;
            esac
        ;;
        '-'*)
            # $1 should already be the short variant of the option.
            case "$1$2" in
                '-'*) : ;;
                *) return 1 ;;
            esac
        ;;
        *)
            return 1
        ;;
    esac

    # Try to match a long option without an argument.
    case "$1" in
        '--'*)
            case "$opt" in
                "$1")
                    opt=; opt_match="$1"; shiftN=1
                    return 0
                ;;
            esac
        ;;
    esac

    # Here, it cannot be a long option anymore; return early to prevent a false
    # match below.
    case "$opt" in
        '--'*) return 1 ;;
    esac

    # Try to match a short option without an argument.
    case "$opt" in
        "$1"*)
            # Add the option to the index of encountered short options,
            # $sopt_index.
            case :"$sopt_index" in
                :) sopt_index="${1#?}" ;;
                *) sopt_index="$sopt_index${1#?}" ;;
            esac

            opt="-${opt#??}"; opt_match="$1"; shiftN=1
            return 0
        ;;
    esac

    # No match.
    return 1
}

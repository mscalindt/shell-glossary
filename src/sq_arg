#! .desc:
# Get N evaluated argument in a single-quotes array of arguments
#! .params:
# <$1> - "N"_arg(
#     '0' - last
#     .
# )
# <$2> - single-quotes array of arguments
#! .uses.fn:
# <assert> ("type" "string");
#          Assert a string
#! .gives.var:
# (0) <_arg> - [string];
#              evaluated argument
#! .rc:
# (0) success
# (1) argument does not exist
#! .rc.fn:
# (assert) (255) bad input
#.
sq_arg() {
    assert -whole-n "$1" || return 255
    assert -single-quotes-array "$2" || return 255

    # Extract the specified evaluated argument. The usage of `eval` here is
    # safe because $2 has been asserted as a strict single-quotes array of
    # arguments.
    _i=1; _n="$1"; eval set -- "$2"; while [ "$#" -ge 1 ]; do
        [ "$_i" = "$_n" ] || { _i=$((_i + 1)); shift && continue; }

        _arg="$1"; return 0
    done

    return 1
}

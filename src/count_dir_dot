#! .desc:
# Count `.*` (dot/hidden) directories in a directory
#! .params:
# <$1> - directory path
# [$2] - prefix
# [$3] - suffix
#! .gives:
# (0) <_count> $ - integer
#! .rc:
# (0) success
# (*) error
# (255) bad usage / error
#! .desc.ext:
# The presence of characters outside the "Portable Filename Character Set"[1]
# in $2/$3 results in undefined behavior.
#
# For more information, refer to:
# > "POSIX.1-2024, Volume: Base Definitions, Section: Definitions,
#   Subsection: Dot".
# > "POSIX.1-2024, Volume: Base Definitions, Section: Definitions,
#   Subsection: Dot-Dot".
# > "POSIX.1-2024, Volume: Base Definitions, Section: Definitions,
#   Subsection: Pathname".
# > "POSIX.1-2024, Volume: Base Definitions, Section: Definitions,
#   Subsection: Portable Filename Character Set".
# > "POSIX.1-2024, Volume: Shell & Utilities, Section: Shell Command Language,
#   Subsection: Pathname Expansion".
# > "POSIX.1-2024, Volume: Shell & Utilities, Section: Shell Command Language,
#   Subsection: Patterns Used for Filename Expansion".
#
# [1] The portable filename character set is:
#     A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
#     a b c d e f g h i j k l m n o p q r s t u v w x y z
#     0 1 2 3 4 5 6 7 8 9 . _ -
#     See the "Portable Filename Character Set" POSIX reference for details.
#.
count_dir_dot() {
    [ -d "$1" ] || return 255

    # Use pathname expansion with a glob pattern to match `.*` (dot/hidden)
    # directories in $1 (directory), optionally with a prefix ($2) and/or
    # suffix ($3).
    set -- "$1"/."$2"*"$3"/ || return "$?"

    # Ignore `.` and `..`.
    while [ "$1" ]; do case "$1" in
        */'.'/ | */'..'/) shift ;;
        *) break ;;
    esac done

    _count=$# && [ -e "$1" ] || _count=0
}
